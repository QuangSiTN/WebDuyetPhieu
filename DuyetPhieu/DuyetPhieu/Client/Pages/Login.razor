@page "/login"
@inject IUserService UserService
@inject IMNService MNService
@inject MudBlazor.ISnackbar snackBar
@inject IDialogService DialogService
@inject NavigationManager NavigationManager
@if (loading == true)
{
	<MudProgressLinear Color="Color.Secondary" Size="Size.Small" Indeterminate="true" />
}
else
{
	<div style="max-width: 800px;position:sticky;padding-left:35%;margin-top:50px;">
		<MudCard>
			<MudCardHeader Style=" background-color: #EEEEEE;">
				<CardHeaderContent>
					<MudText Style="text-align: center; background-color: #EEEEEE; font-family: 'Times New Roman', Times, serif;" Typo="Typo.h5"> Đăng nhập </MudText>
				</CardHeaderContent>
			</MudCardHeader>
			<MudCardContent>
				<MudForm @bind-IsValid="@success">
					<MudTextField T="string" Label="Username" Immediate="true" @onkeypress="@GETSITE" Required="true" Variant="Variant.Outlined"
									@bind-Value="loginModel.UserName" For="@(() => loginModel.UserName)" />
					<MudTextField T="string" Label="Password" Variant="Variant.Outlined"
									@bind-Value="loginModel.Password" For="@(() => loginModel.Password)"
									InputType="InputType.Password"
									Required="true" />
					<MudSelect T="ChiNhanhLoginModel" Style="margin-top:10px;" @bind-Value="@chiNhanhLoginModel" Variant="Variant.Outlined" Label=" Chi nhánh " ToStringFunc="@converterTenChiNhanh" AnchorOrigin="Origin.BottomCenter" Margin="Margin.Dense">
						@if (chiNhanhLoginModel != null)
						{
							<MudSelectItem Value="@chiNhanhLoginModel">@chiNhanhLoginModel.TenChiNhanh</MudSelectItem>
						}

					</MudSelect>
				</MudForm>
			</MudCardContent>
			<MudCardActions>
				<MudButton ButtonType="ButtonType.Submit" OnClick="@(()=>OnValidSubmit())" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Login</MudButton>
			</MudCardActions>
		</MudCard>
	</div>
}
@code {
	bool loading = false;
	bool success;
	private LoginModel loginModel { get; set; } = new LoginModel();
	private ListChiNhanhLogin listChiNhanhLogin { get; set; } = new ListChiNhanhLogin();
	private List<ChiNhanhLoginModel> listchiNhanhLoginModel { get; set; } = new List<ChiNhanhLoginModel>();
	private ChiNhanhLoginModel chiNhanhLoginModel { get; set; }
	private async Task OnValidSubmit()
	{
		loginModel.MaChiNhanh = chiNhanhLoginModel.MaChiNhanh;
		if (loginModel.UserName == null)
		{
			snackBar.Add(" vui lòng nhập Username để đăng nhập ", Severity.Warning);
		}
		else if (loginModel == null)
		{
			snackBar.Add(" vui lòng nhập Login để đăng nhập ", Severity.Warning);
		}
		else {
			
			loading = true;
			var result = await UserService.Login(loginModel);
			loading = false;
			if (result.Successful)
			{
				snackBar.Add("Đăng nhập thành công ", Severity.Success);
				NavigationManager.NavigateTo("/", true);
			}
			else
			{
				snackBar.Add(result.Errors.ToString(), Severity.Error);
				NavigationManager.NavigateTo("/login");
			}
		}
	}
	Func<ChiNhanhLoginModel, string> converterTenChiNhanh = p => p?.TenChiNhanh;
	private async Task GETSITE(KeyboardEventArgs e)
	{

		if (e.Key == "Enter")
		{
			if(loginModel.UserName == null)
			{
				Console.WriteLine("Ten dang nhap khong co ");
			}
			else if (loginModel.UserName != null)
			{
				Console.WriteLine("Ten dang nhap " + loginModel.UserName);
				chiNhanhLoginModel =await MNService.GetNameSiteByUserName(loginModel.UserName);
			}
			else
			{
				Console.WriteLine("Ten dang nhap khong co ");
			}

		}
	}
}
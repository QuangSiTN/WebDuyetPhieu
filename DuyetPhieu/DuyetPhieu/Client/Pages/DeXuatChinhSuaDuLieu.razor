@page "/dexuatchinhsuadulieu"
@inject IMNService MNService
@inject IDeNghiChinhSuaDuLieuService DeNghiService
@inject ISnackbar Snackbar
@inject HttpClient httpclient
@inject AuthenticationStateProvider auth
@*@attribute [Authorize(Roles = "BAOCAOBHNB")]*@
<div style="height:94%">
	<MudPaper Style="margin: 2px 2px 2px 2px;" Outlined="true" MinHeight="84vh" Elevation="2">
		<MudCard Style="height :84vh">
			<MudCardHeader Style="background-color: #E0E0E0;">
				<CardHeaderContent>
					<MudText Style=" background-color : #E0E0E0; font-family: 'Times New Roman', Times, serif;" Typo="Typo.h5"><b>Đề Xuất Chỉnh Sửa Dữ Liệu </b></MudText>
				</CardHeaderContent>
			</MudCardHeader>
			<MudCardContent>
				<MudGrid>
					<MudItem xs="12" sm="6" md="6">
						<MudTextField T="string" Style="font-size:small;" Label="Số Phiếu Biên Nhận" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
									  @bind-Value="@inModel.SoChungTu" For="@(() => inModel.SoChungTu)" />
					</MudItem>
					<MudItem xs="12" sm="6" md="6">
						<MudSelect Typo="Typo.subtitle2" T="LCTXETDUYETModel" @bind-Value="@lctXETDUYETModel" Label="Loại Chứng Từ" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTuXD" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listChungTuXD != null)
							{
								@foreach (var dv in listChungTuXD)
								{
									<MudSelectItem Value="@dv">@dv.MoTa</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					@*<MudItem xs="12" sm="6" md="6">
						<MudTextField Typo="Typo.subtitle2" T="string" Label="Chứng từ liên quan" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
									  @bind-Value="@inModel.ChungTuLq" For="@(()=>inModel.ChungTuLq)" />
					</MudItem>*@
					<MudItem xs="12" sm="6" md="6">
						<MudSelect Style="font-size:small;" Typo="Typo.subtitle2" T="LoaiChungTuModel" @bind-Value="@loaiChungTuModel" Label="Chứng từ liên quan" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTu" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listLoaiChungTu != null)
							{
								@foreach (var ct in listLoaiChungTu)
								{
									<MudSelectItem Value="@ct">@ct.LoaiPhieu</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="3">
						<InputFile multiple OnChange="OnChange" accept="image/png, image/jpeg, image/gif" />
						
					</MudItem>
					<MudItem xs="12" sm="6" md="6">
						<MudSelect T="MnNguonGocLoiModel" @bind-Value="@mnNguonGocLoiBaoHanhModel" Label="Nguồn Gốc Lỗi" Variant="Variant.Outlined" ToStringFunc="@converterNguonGocLoiBH" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listNguonGocLoi != null)
							{
								@foreach (var gl in listNguonGocLoi)
								{
									<MudSelectItem Value="@gl">@gl.LoaiLoi</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="6">
						<MudSelect Typo="Typo.subtitle2" T="LCTXETDUYETModel" @bind-Value="@lctXETDUYETModel" Label="Hình Thức Chỉnh Sửa" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTuXD" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listChungTuXD != null)
							{
								@foreach (var dv in listChungTuXD)
								{
									<MudSelectItem Value="@dv">@dv.MoTa</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="6">
						<MudTextField Typo="Typo.subtitle2" T="string" Label="Nội dung" Required="true" Variant="Variant.Outlined" Lines="2" Margin="Margin.Dense"
									  @bind-Value="@inModel.NoiDung" For="@(()=>inModel.NoiDung)" />
					</MudItem>
				</MudGrid>
			</MudCardContent>
		</MudCard>
	</MudPaper>
</div>
<div style="height:7%">
	<MudPaper Height="7vh" Style="background-color: #F9E5A4;margin-top:5px;" Square="true" Outlined="true">
		<div class="d-flex justify-center align-center mud-height-full">
			<MudButton Disabled="@disableAdd" OnClick="@UpdateStateButtonAdd" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.RemoveRedEye" Color="Color.Info">Xem Quy Trình</MudButton>
			<MudButton Disabled="@disableAdd" OnClick="@UpdateStateButtonAdd" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info">Thêm</MudButton>
			<MudButton Disabled="@disableDelete" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Info">Xóa</MudButton>
			<MudButton Disabled="@disableUpdate" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Info">Sửa</MudButton>
			<MudButton Disabled="@disableSave" OnClick="@SaveEMSChungTu" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.Save" Color="Color.Info">Lưu</MudButton>
			<MudButton Disabled="@disableFind" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.Search" Color="Color.Info">Tìm</MudButton>
			<MudButton Disabled="@disableUndo" OnClick="@UpdateStateButtonUndo" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Info">Trở lại</MudButton>
		</div>
	</MudPaper>
</div>



@code {

	//button
	//disable button
	private bool disableAdd = false;
	private bool disableUpdate = false;
	private bool disableDelete = false;
	private bool disableSave = true;
	private bool disableUndo = true;
	private bool disableFind = false;
	//xu ly button
	private void UpdateStateButtonAdd()
	{
		disableAdd = true;
		disableUpdate = true;
		disableDelete = true;
		disableFind = true;
		disableSave = false;
		disableUndo = false;

	}
	private void UpdateStateButtonUndo()
	{
		disableAdd = false;
		disableUpdate = false;
		disableDelete = false;
		disableFind = false;
		disableSave = true;
		disableUndo = true;

	}
	//loai chung tu
	private IEnumerable<LoaiChungTuModel> listLoaiChungTu { get; set; }
	private LoaiChungTuModel loaiChungTuModel { get; set; } = new LoaiChungTuModel();
	// nguon goc loi bao hanh
	private IEnumerable<MnNguonGocLoiModel> listNguonGocLoi { get; set; }
	private MnNguonGocLoiModel mnNguonGocLoiBaoHanhModel { get; set; } = new MnNguonGocLoiModel();

	// loai chung tu zet duyet
	private IEnumerable<LCTXETDUYETModel> listChungTuXD { get; set; }
	private LCTXETDUYETModel lctXETDUYETModel { get; set; } = new LCTXETDUYETModel();
	// du lieu input
	private EmsDeNghiChinhSuaDuLieuInModel inModel { get; set; } = new EmsDeNghiChinhSuaDuLieuInModel();
	// user
	private string username = "";
	private DateTime dateFrom = DateTime.Today;
	
	//Convert
	Func<LoaiChungTuModel, string> converterLoaiChungTu = p => p?.LoaiPhieu;
	Func<MnNguonGocLoiModel, string> converterNguonGocLoiBH = p => p?.LoaiLoi;
	Func<LCTXETDUYETModel, string> converterLoaiChungTuXD = p => p?.MoTa;
	//
	

	//
	protected override async Task OnInitializedAsync()
	{

		var checkAuth = await auth.GetAuthenticationStateAsync();
		if (checkAuth != null)
		{
			username = checkAuth.User.Identity.Name;
			if (username != null)
			{
				Console.WriteLine("username dang nhap : " + username);
				listLoaiChungTu = (await MNService.ListChungTu()).ToList();
				listNguonGocLoi = (await MNService.ListNguonGocLoi()).ToList();
				listChungTuXD = (await MNService.ListLCTXETDUYET()).ToList();
			}
		}
	}
	List<UploadedFile> filesBase64 = new List<UploadedFile>();
	private async Task OnChange(InputFileChangeEventArgs e)
	{
		var files = e.GetMultipleFiles();
		if(files != null)
		{
			foreach (var file in files)
			{
				using (var ms = new MemoryStream())
				{
					await file.OpenReadStream().CopyToAsync(ms);

					var uploadedFile = new UploadedFile();
					uploadedFile.FileName = file.Name;
					uploadedFile.FileContent = ms.ToArray();
					filesBase64.Add(uploadedFile);
					
				}
			}
		}

	}
	private async Task SaveEMSChungTu()
	{

		inModel.LoaiChungTu = lctXETDUYETModel.MaXetDuyet;
		inModel.NguyeNhanLoi = mnNguonGocLoiBaoHanhModel.SoChungTu;
		inModel.HinhThucChinhSua = lctXETDUYETModel.MaXetDuyet;
		inModel.ChungTuLq = loaiChungTuModel.LoaiPhieu;
		inModel.CreatedBy = username;
		inModel.UrlAnh = filesBase64;
		if (inModel.CreatedBy == null)
		{
			Snackbar.Add("Chua co ten username", Severity.Warning);
		}
		else if (inModel.LoaiChungTu == null)
		{
			Snackbar.Add("Chua co loai chung tu", Severity.Warning);
		}
		else if (inModel.NguyeNhanLoi == null)
		{
			Snackbar.Add("Chua co nguyen nhan gay loi", Severity.Warning);
		}
		else if (inModel.HinhThucChinhSua == null)
		{
			Snackbar.Add("Chua chon hinh thuc chinh sua ", Severity.Warning);
		}
		else if (inModel.SoChungTu == null)
		{
			Snackbar.Add("Chua co so  chung tu", Severity.Warning);
		}
		else if (inModel.ChungTuLq == null)
		{
			Snackbar.Add("Chua co chung tu lien quan", Severity.Warning);
		}
		else if (inModel.HinhThucChinhSua == null)
		{
			Snackbar.Add("Chua co hinh thuc chinh sua", Severity.Warning);
		}
		else if (inModel.NoiDung == null)
		{
			Snackbar.Add("Chua co noi dung", Severity.Warning);
		}
		else if( inModel.UrlAnh == null)
		{
			Snackbar.Add("Chua gan anh chun tu lien quan ",Severity.Warning);
		}
		else
		{
			var rs = await DeNghiService.InsertPhieuDeNghiChinhSua(inModel);
			if (rs.Successful)
			{
				Snackbar.Add("Them thanh cong", Severity.Success);
			}
			else
			{
				Snackbar.Add("Loi :" + rs.Errors, Severity.Error);
			}
		}

	}
}

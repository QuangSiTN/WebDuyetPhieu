@page "/denghicapquyen"
@inject IMNService MNService

<MudPaper Class="d-flex align-content-space-between flex-wrap flex-grow-1 gap-4" Height="560px;">
	<MudPaper Height="518px;" Style="margin: 2px 2px 2px 2px;" Outlined="true" Elevation="2">
		<MudCard Style="height:85vh;">
			<MudCardHeader Style="background-color: #E0E0E0; height: 50px;">
				<CardHeaderContent>
					<MudText Style="background-color : #E0E0E0; font-family: 'Times New Roman', Times, serif;" Typo="Typo.h5"><b>Đề Nghị Cấp Quyền </b></MudText>
				</CardHeaderContent>
			</MudCardHeader>
			<MudCardContent>
				<MudGrid Spacing="1">
					<MudItem xs="12" sm="6" md="4">
						<MudTextField T="string" Label="Mã Nhân Viên" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense" />
					</MudItem>
					<MudItem xs="12" sm="6" md="4">
						<MudSelect Typo="Typo.subtitle2" T="LCTXETDUYETModel" @bind-Value="@lctXETDUYETModel" Label="Hệ Thống" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTuXD" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listChungTuXD != null)
							{
								@foreach (var dv in listChungTuXD)
								{
									<MudSelectItem Value="@dv">@dv.MoTa</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="4">
						<MudSelect Typo="Typo.subtitle2" T="LCTXETDUYETModel" @bind-Value="@lctXETDUYETModel" Label="Loại Quyền" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTuXD" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listChungTuXD != null)
							{
								@foreach (var dv in listChungTuXD)
								{
									<MudSelectItem Value="@dv">@dv.MoTa</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="4">
						<MudSelect Typo="Typo.subtitle2" T="LCTXETDUYETModel" @bind-Value="@lctXETDUYETModel" Label="Nhóm Quyền" Variant="Variant.Outlined" ToStringFunc="@converterLoaiChungTuXD" AnchorOrigin="Origin.BottomCenter" Dense="true" Margin="Margin.Dense">
							@if (listChungTuXD != null)
							{
								@foreach (var dv in listChungTuXD)
								{
									<MudSelectItem Value="@dv">@dv.MoTa</MudSelectItem>
								}
							}
						</MudSelect>
					</MudItem>
					<MudItem xs="12" sm="6" md="4">
						<MudAutocomplete T="InformationChiNhanhModel" MaxItems="null" Variant="Variant.Outlined" @bind-Value="@chiNhanhModel" SearchFunc="@SearchChiNhanh" ToStringFunc="@convertChiNhanh" Label="Chi Nhánh " AnchorOrigin="Origin.BottomCenter" Margin="Margin.Dense" />
					</MudItem>
					<MudItem xs="12" sm="6" md="4">
						<MudTextField Typo="Typo.subtitle2" T="string" Label="Nội dung" Required="true" Variant="Variant.Outlined" Lines="2" Margin="Margin.Dense" />
					</MudItem>
				</MudGrid>
			</MudCardContent>
		</MudCard>
	</MudPaper>
</MudPaper>
<MudAppBar Bottom="true" Style="width: 100%; height: 40px; background-color: #F9E5A4;">
	<MudPaper Class="d-flex justify-center flex-grow-1" Elevation="0" Style="background-color: #F9E5A4; margin-left: 5%;">
		<MudPaper Class="mud-theme-info" Width="160px" Height="35px">
			<MudButton Disabled="@disableAdd" Style="width:160px;height:35px;" OnClick="@UpdateStateButtonAdd" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.RemoveRedEye" Color="Color.Info">Xem Quy Trình</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="80px" Height="35px">
			<MudButton Disabled="@disableAdd" Style="width:80px;height:35px;" OnClick="@UpdateStateButtonAdd" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Add" Color="Color.Info">Thêm</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="80px" Height="35px">
			<MudButton Disabled="@disableDelete" Style="width:80px;height:35px;" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Info">Xóa</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="80px" Height="35px">
			<MudButton Disabled="@disableUpdate" Style="width:80px;height:35px;" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Info">Sửa</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="80px" Height="35px">
			<MudButton Disabled="@disableSave" Style="width:80px;height:35px;" OnClick="@UpdateStateButtonUndo" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.Save" Color="Color.Info">Lưu</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="80px" Height="35px">
			<MudButton Disabled="@disableFind" Style="width:80px;height:35px;" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Filled.Search" Color="Color.Info">Tìm</MudButton>
		</MudPaper>
		<MudPaper Class="mud-theme-info" Width="120px" Height="35px">
			<MudButton Disabled="@disableUndo" Style="width:120px;height:35px;" OnClick="@UpdateStateButtonUndo" Variant="Variant.Filled" Size="Size.Small" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Info">Trở lại</MudButton>
		</MudPaper>
	</MudPaper>
	<MudSpacer/>
</MudAppBar>
@code {
	// loai chung tu zet duyet
	private IEnumerable<LCTXETDUYETModel> listChungTuXD { get; set; }
	private LCTXETDUYETModel lctXETDUYETModel { get; set; } = new LCTXETDUYETModel();
	//chi nhanh
	private IEnumerable<InformationChiNhanhModel> listChiNhanh { get; set; }
	private InformationChiNhanhModel chiNhanhModel { get; set; } = new InformationChiNhanhModel();
	private ListInformationChiNhanh listInforChiNhanh { get; set; } = new ListInformationChiNhanh();
	//Convert
	Func<LoaiChungTuModel, string> converterLoaiChungTu = p => p?.LoaiPhieu;
	Func<LCTXETDUYETModel, string> converterLoaiChungTuXD = p => p?.MoTa;
	Func<InformationChiNhanhModel, string> convertChiNhanh = p => p?.TenChiNhanh;
	protected override async Task OnInitializedAsync()
	{
		listChungTuXD = (await MNService.ListLCTXETDUYET()).ToList();
		listInforChiNhanh = await MNService.GetAllChiNhanh();
		listChiNhanh = listInforChiNhanh.Data.OrderBy(x => x.TenChiNhanh);
	}
	//button
	//disable button
	private bool disableAdd = false;
	private bool disableUpdate = false;
	private bool disableDelete = false;
	private bool disableSave = true;
	private bool disableUndo = true;
	private bool disableFind = false;
	//xu ly button
	private void UpdateStateButtonAdd()
	{
		disableAdd = true;
		disableUpdate = true;
		disableDelete = true;
		disableFind = true;
		disableSave = false;
		disableUndo = false;

	}
	private void UpdateStateButtonUndo()
	{
		disableAdd = false;
		disableUpdate = false;
		disableDelete = false;
		disableFind = false;
		disableSave = true;
		disableUndo = true;
	}
	//search chi  nhanh
	private async Task<IEnumerable<InformationChiNhanhModel>> SearchChiNhanh(string value)
	{
		await Task.Delay(5);
		if (string.IsNullOrEmpty(value))
			return listChiNhanh;
		return listChiNhanh.Where(x => x.TenChiNhanh.Contains(value, StringComparison.InvariantCultureIgnoreCase) || x.MaChiNhanh.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}
}
